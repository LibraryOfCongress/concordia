# Generated by Django 4.2.21 on 2025-06-05 14:03

from django.db import migrations


def create_asset_status_task(apps, schema_editor):
    IntervalSchedule = apps.get_model("django_celery_beat", "IntervalSchedule")
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")

    # Ensure an IntervalSchedule of every 5 minutes exists (or get it).
    interval, created = IntervalSchedule.objects.get_or_create(
        every=5,
        period="minutes",
    )

    # Create the PeriodicTask if it doesnâ€™t already exist
    PeriodicTask.objects.get_or_create(
        name="Populate asset status visualization cache",
        task="concordia.tasks.populate_asset_status_visualization_cache",
        interval=interval,
        defaults={
            "enabled": True,
            "description": "Populates the cache for the asset-status-overview and asset-status-by-campaign visualizations",
        },
    )


def delete_asset_status_task(apps, schema_editor):
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")
    # Delete by the exact name we used above
    PeriodicTask.objects.filter(
        name="Populate asset status visualization cache"
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("concordia", "0112_projecttopic_url_filter_alter_projecttopic_id"),
        ("django_celery_beat", "0019_alter_periodictasks_options"),
    ]

    operations = [
        migrations.RunPython(create_asset_status_task, delete_asset_status_task),
    ]
