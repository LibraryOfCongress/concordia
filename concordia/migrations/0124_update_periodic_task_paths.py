# Generated by Django 4.2.22 on 2025-10-22 16:03

from django.db import migrations

OLD_TO_NEW = {
    # reservations.py
    "concordia.tasks.expire_inactive_asset_reservations": "concordia.tasks.reservations.expire_inactive_asset_reservations",
    "concordia.tasks.tombstone_old_active_asset_reservations": "concordia.tasks.reservations.tombstone_old_active_asset_reservations",
    "concordia.tasks.delete_old_tombstoned_reservations": "concordia.tasks.reservations.delete_old_tombstoned_reservations",
    # reports/sitereport.py
    "concordia.tasks.site_report": "concordia.tasks.reports.sitereport.site_report",
    # visualizations.py
    "concordia.tasks.populate_asset_status_visualization_cache": "concordia.tasks.visualizations.populate_asset_status_visualization_cache",
    "concordia.tasks.populate_daily_activity_visualization_cache": "concordia.tasks.visualizations.populate_daily_activity_visualization_cache",
    # next_asset/renew.py
    "concordia.tasks.renew_next_asset_cache": "concordia.tasks.next_asset.renew.renew_next_asset_cache",
    # search_index.py
    "concordia.tasks.create_opensearch_indices": "concordia.tasks.search_index.create_opensearch_indices",
    "concordia.tasks.delete_opensearch_indices": "concordia.tasks.search_index.delete_opensearch_indices",
    "concordia.tasks.rebuild_opensearch_indices": "concordia.tasks.search_index.rebuild_opensearch_indices",
    "concordia.tasks.populate_opensearch_users_indices": "concordia.tasks.search_index.populate_opensearch_users_indices",
    "concordia.tasks.populate_opensearch_assets_indices": "concordia.tasks.search_index.populate_opensearch_assets_indices",
    "concordia.tasks.populate_opensearch_indices": "concordia.tasks.search_index.populate_opensearch_indices",
    # assets.py
    "concordia.tasks.calculate_difficulty_values": "concordia.tasks.assets.calculate_difficulty_values",
    "concordia.tasks.populate_asset_years": "concordia.tasks.assets.populate_asset_years",
    "concordia.tasks.fix_storage_images": "concordia.tasks.assets.fix_storage_images",
    # resources.py
    "concordia.tasks.populate_resource_files": "concordia.tasks.resources.populate_resource_files",
    # housekeeping.py
    "concordia.tasks.clear_sessions": "concordia.tasks.housekeeping.clear_sessions",
    # unusualactivity.py
    "concordia.tasks.unusual_activity": "concordia.tasks.unusualactivity.unusual_activity",
    # useractivity.py
    "concordia.tasks.populate_completed_campaign_counts": "concordia.tasks.useractivity.populate_completed_campaign_counts",
    "concordia.tasks.populate_active_campaign_counts": "concordia.tasks.useractivity.populate_active_campaign_counts",
    "concordia.tasks.update_userprofileactivity_from_cache": "concordia.tasks.useractivity.update_userprofileactivity_from_cache",
    # thumbnails.py
    "concordia.tasks.download_missing_thumbnails_task": "concordia.tasks.thumbnails.download_missing_thumbnails_task",
}

NEW_TO_OLD = {v: k for k, v in OLD_TO_NEW.items()}


def forwards(apps, schema_editor):
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")
    for pt in PeriodicTask.objects.all().only("id", "task"):
        new = OLD_TO_NEW.get(pt.task)
        if new and new != pt.task:
            PeriodicTask.objects.filter(id=pt.id).update(task=new)


def backwards(apps, schema_editor):
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")
    for pt in PeriodicTask.objects.all().only("id", "task"):
        old = NEW_TO_OLD.get(pt.task)
        if old and old != pt.task:
            PeriodicTask.objects.filter(id=pt.id).update(task=old)


class Migration(migrations.Migration):

    dependencies = [
        ("concordia", "0123_alter_campaignretirementprogress_options"),
    ]

    operations = [
        migrations.RunPython(forwards, backwards),
    ]
