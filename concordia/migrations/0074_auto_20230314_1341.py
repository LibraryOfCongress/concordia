# Generated by Django 3.2.18 on 2023-03-14 13:41

from django.conf import settings
from django.db import migrations
from django.db.models import Count, Q


def populate_user_activity_table(apps, schema_editor):
    Campaign = apps.get_model("concordia", "Campaign")
    Tag = apps.get_model("concordia", "Tag")
    User = apps.get_model(*settings.AUTH_USER_MODEL.split("."))
    UserAssetTagCollection = apps.get_model("concordia", "UserAssetTagCollection")
    UserProfileActivity = apps.get_model("concordia", "UserProfileActivity")
    expression = "project__item__asset__transcription"
    for user in User.objects.all():
        q_transcriptions = Q(project__item__asset__transcription__user=user)
        q_reviews = Q(project__item__asset__transcription__reviewed_by=user)
        campaigns = Campaign.objects.annotate(
            action_count=Count(expression, filter=q_transcriptions | q_reviews),
            transcribe_count=Count(expression, filter=q_transcriptions),
            review_count=Count(expression, filter=q_reviews),
        ).exclude(action_count=0)
        tag_collections = UserAssetTagCollection.objects.filter(user=user)
        UserProfileActivity.objects.bulk_create(
            [
                UserProfileActivity(
                    user=user,
                    campaign=campaign,
                    asset_count=campaign.action_count,
                    asset_tag_count=Tag.objects.filter(
                        userassettagcollection__in=tag_collections.filter(
                            asset__item__project__campaign=campaign
                        )
                    )
                    .distinct()
                    .count(),
                    transcribe_count=campaign.transcribe_count,
                    review_count=campaign.review_count,
                )
                for campaign in campaigns
            ]
        )


def reverse_func(apps, schema_editor):
    # reverse_func() should delete instances.
    UserProfileActivity = apps.get_model("concordia", "UserProfileActivity")
    db_alias = schema_editor.connection.alias
    UserProfileActivity.objects.using(db_alias).all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ("concordia", "0073_auto_20230314_1327"),
    ]

    operations = [
        migrations.RunPython(populate_user_activity_table, reverse_func),
    ]
