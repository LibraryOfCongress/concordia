# Generated by Django 4.2.21 on 2025-06-05 14:10

from django.db import migrations


def create_daily_activity_task(apps, schema_editor):
    CrontabSchedule = apps.get_model("django_celery_beat", "CrontabSchedule")
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")

    # Ensure a CrontabSchedule for daily at 4:00 AM exists.
    crontab, created = CrontabSchedule.objects.get_or_create(
        minute="0",
        hour="4",
        day_of_week="*",
        day_of_month="*",
        month_of_year="*",
        timezone="America/New_York",
    )

    # Create the PeriodicTask if it doesnâ€™t already exist
    PeriodicTask.objects.get_or_create(
        name="Populate daily activity visualization cache",
        task="concordia.tasks.populate_daily_activity_visualization_cache",
        crontab=crontab,
        defaults={
            "enabled": True,
            "description": "Populates the cache for the daily-activity visualization",
        },
    )


def delete_daily_activity_task(apps, schema_editor):
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")
    PeriodicTask.objects.filter(
        name="Populate daily activity visualization cache"
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("concordia", "0113_create_asset_status_periodic_task"),
        ("django_celery_beat", "0019_alter_periodictasks_options"),
    ]

    operations = [
        migrations.RunPython(create_daily_activity_task, delete_daily_activity_task),
    ]
