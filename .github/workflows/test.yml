name: Test

on:
    workflow_dispatch:
    push:
        branches: [main, release]
    pull_request:
        branches: [main]
    schedule:
        - cron: '20 22 * * 2'

env:
    PIPENV_IGNORE_VIRTUALENVS: 1
    DJANGO_SETTINGS_MODULE: concordia.settings_test

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            # Label used to access the service container
            postgres:
                # Docker Hub image
                image: postgres
                # Provide the password for postgres
                env:
                    POSTGRES_DB: concordia
                    POSTGRES_PASSWORD: postgres
                # Set health checks to wait until postgres has started
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    # Maps tcp port 5432 on service container to the host
                    - 5432:5432

            # Label used to access the service container
            redis:
                # Docker Hub image
                image: redis
                # Set health checks to wait until redis has started
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    # Opens tcp port 6379 on the host and service container
                    - 6379:6379

        steps:
            - name: Install system packages
              run: |
                  sudo apt-get install -qy libmemcached-dev libz-dev libfreetype6-dev libtiff-dev libjpeg-dev libopenjp2-7-dev libwebp-dev zlib1g-dev libpq-dev

            - name: Install node and npm
              uses: actions/setup-node@v3
              with:
                  node-version: '12'

            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'
                  architecture: 'x64'
                  cache: 'pipenv'

            - name: Display Python version
              run: python -c "import sys; print(sys.version)"

            - name: Install Python Dependencies
              run: |
                  python3 -m pip install --upgrade pip
                  pip3 install -U packaging
                  pip3 install -U setuptools
                  pip3 install -U pipenv
                  pipenv install --dev --deploy
                  ##  We want to have safety available but aren't putting it in the dev tools:
                  pipenv run pip install safety

            - name: Run Tests
              run: |
                  mkdir logs
                  touch ./logs/concordia-celery.log
                  npm install
                  npx gulp build
                  pipenv run ./manage.py collectstatic --no-input
                  pipenv run coverage run ./manage.py test
                  git fetch --unshallow
                  pipenv run safety check
                  npx --quiet csstree-validator static/css/
              env:
                  PGPASSWORD:
                  # The hostname used to communicate with the PostgreSQL service container
                  POSTGRES_HOST: localhost
                  # The default PostgreSQL port
                  POSTGRES_PORT: 5432
                  # The hostname used to communicate with the Redis service container
                  REDIS_HOST: localhost
                  # The default Redis port
                  REDIS_PORT: 6379
                  # COMMIT_RANGE: ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}
