name: 'Deploy'

on:
    workflow_dispatch:
    push:
        branches: [main]
    # schedule:
    #     - cron: "*/15 * * * *"

env:
    AWS_REGION: 'us-east-1'

permissions:
    id-token: write
    contents: read

jobs:
    deploy:
        name: Deploy to Dev
        runs-on: ubuntu-latest

        steps:
            - name: Install system packages
              run: |
                  sudo apt-get install -qy libmemcached-dev libz-dev libfreetype6-dev libtiff-dev \
                    libjpeg-dev libopenjp2-7-dev libwebp-dev zlib1g-dev libpq-dev

            - name: Install node and npm
              uses: actions/setup-node@v3
              with:
                  node-version: '12'

            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  # Semantic version range syntax or exact version of a Python version
                  python-version: '3.10'
                  # Optional - x64 or x86 architecture, defaults to x64
                  architecture: 'x64'

            - name: Initialize venv install Dependencies
              id: python-build
              run: |
                  python3 -m venv venv-1
                  source venv-1//bin/activate
                  python3 -m pip install --upgrade pip
                  pip3 install -U packaging
                  pip3 install -U setuptools
                  pip3 install -U pipenv
                  pipenv install --dev --system --deploy
                  python3 setup.py build

                  export FULL_VERSION_NUMBER="$(python3 setup.py --version)"
                  echo "::set-env name=FULL_VERSION_NUMBER::$FULL_VERSION_NUMBER"

                  export VERSION_NUMBER=$(echo "${FULL_VERSION_NUMBER}" | cut -d '+' -f 1)
                  echo "::set-env name=VERSION_NUMBER::$VERSION_NUMBER"

            - name: configure aws credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}
                  # role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
                  role-session-name: github_to_aws_deploy

            # Temporary test - hello from AWS: WhoAmI
            - name: Sts GetCallerIdentity
              run: |
                  aws sts get-caller-identity
