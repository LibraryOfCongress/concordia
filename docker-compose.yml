version: '3.6'
services:
    opensearch-node:
        image: public.ecr.aws/opensearchproject/opensearch:1
        container_name: opensearch-node
        environment:
            - cluster.name=opensearch-cluster
            - node.name=opensearch-node
            - discovery.type=single-node
            - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
            - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
            - 'DISABLE_INSTALL_DEMO_CONFIG=true' # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
            - 'DISABLE_SECURITY_PLUGIN=true' # initial local setup - Disables security plugin
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
                hard: 65536
        volumes:
            - opensearch-data:/usr/share/opensearch/data
        ports:
            - 9200:9200 # REST API
            - 9600:9600 # Performance Analyzer
        networks:
            - default

    opensearch-dashboards:
        image: public.ecr.aws/opensearchproject/opensearch-dashboards:1
        container_name: opensearch-dashboards
        ports:
            - 5601:5601
        expose:
            - '5601'
        environment:
            - 'OPENSEARCH_HOSTS=http://opensearch-node:9200'
            - 'DISABLE_SECURITY_DASHBOARDS_PLUGIN=true' # disables security dashboards plugin in OpenSearch Dashboards
        networks:
            - default

    redis:
        restart: unless-stopped
        image: redis:latest
        hostname: redis
        ports:
            - 6379:6379
        volumes:
            - redis_volume:/data

    db:
        restart: unless-stopped
        image: postgres:15
        environment:
            POSTGRES_PASSWORD: ${POSTGRESQL_PW}
            POSTGRES_USER: concordia
            POSTGRES_MULTIPLE_DATABASES: test_concordia
        ports:
            - 5432:5432
        volumes:
            - ./postgresql:/docker-entrypoint-initdb.d
            - db_volume:/var/lib/postgresql/data/

    app:
        restart: unless-stopped
        build: .
        environment: &django-environment
            WAIT_HOSTS: db:5432, redis:6379
            POSTGRESQL_HOST: db
            POSTGRESQL_PW: ${POSTGRESQL_PW}
            CONCORDIA_ENVIRONMENT: development
            DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-concordia.settings_docker}
            DEBUG: ${DEBUG:-}
            REDIS_ADDRESS: redis
            REDIS_PORT: 6379
        depends_on:
            - redis
            - db
        volumes:
            - .:/app
            - images_volume:/concordia_images
        networks:
            - default
        ports: # if running locally use 80:80, if running in local container use 8000:80
            - 80:80

    importer:
        restart: unless-stopped
        build:
            context: .
            dockerfile: importer/Dockerfile
        environment: *django-environment
        depends_on:
            - redis
            - db
        networks:
            - default
        volumes:
            - images_volume:/concordia_images

    celerybeat:
        restart: unless-stopped
        build:
            context: .
            dockerfile: celerybeat/Dockerfile
        environment: *django-environment
        depends_on:
            - redis
            - db
        networks:
            - default

volumes:
    db_volume:
    images_volume:
    redis_volume:
    opensearch-data:

networks:
    default:
